---
alwaysApply: true
---

# App Design Guidelines

**Design guidelines for developers building on the Apps SDK**

---

## Overview

Apps are developer-built experiences that live inside ChatGPT.  
They extend what users can do without breaking the flow of conversation, appearing through lightweight cards, carousels, fullscreen views, and other display modes that integrate seamlessly into ChatGPT’s interface while maintaining its clarity, trust, and voice.

These guidelines will give you everything you need to begin building high-quality, consistent, and user-friendly experiences inside ChatGPT.

---

## Best Practices

Apps are most valuable when they help people accomplish meaningful tasks directly within ChatGPT — without breaking the conversational flow.  
The goal is to design experiences that feel consistent, useful, and trustworthy while extending ChatGPT in ways that add real value.

**Good use cases include:**
- Booking a ride  
- Ordering food  
- Checking availability  
- Tracking a delivery  

These are tasks that are conversational, time-bound, and easy to summarize visually with a clear call to action.

**Poor use cases include:**
- Pasting long-form content from a website  
- Complex multi-step workflows  
- Ads or irrelevant messaging  

---

## Principles

| Principle | Description |
|------------|--------------|
| **Conversational** | Experiences should feel like a natural extension of ChatGPT, fitting seamlessly into the conversational flow and UI. |
| **Intelligent** | Tools should be aware of conversation context, anticipating user intent with relevant responses and UI. |
| **Simple** | Each interaction should focus on a single clear action or outcome. |
| **Responsive** | Tools should feel fast and lightweight, enhancing the conversation. |
| **Accessible** | Designs must support users of all abilities, including those using assistive technologies. |

---

## Boundaries

ChatGPT controls system-level elements such as:
- Voice
- Chrome
- Styles
- Navigation
- Composer

Developers customize:
- Content
- Brand presence
- Actions inside the system framework

This ensures all apps feel native to ChatGPT while expressing unique brand value.

---

## Good Use Cases

A good app should answer “yes” to most of these:

- Does this task fit naturally into a conversation?  
- Is it time-bound or action-oriented?  
- Is the information valuable in the moment?  
- Can it be summarized visually and simply?  
- Does it extend ChatGPT in a meaningful way?

---

## Poor Use Cases

Avoid tools that:
- Display long-form or static content better suited for a website.  
- Require complex multi-step workflows.  
- Use space for ads or upsells.  
- Surface private information in public view.  
- Duplicate ChatGPT’s system functions.

---

## Display Modes

Display modes define how apps appear inside ChatGPT.  
They make experiences feel native to conversation.

### Inline

**When to use:**
- Single actions or decisions (e.g., confirm a booking)
- Small structured data (map, summary, status)
- Self-contained widgets (audio player, score card)

**Layout elements:**
- Icon & tool call  
- Inline display area  
- Follow-up (model-generated next steps)

**Rules of thumb:**
- Max two primary actions (CTA + secondary)
- No deep navigation or nested scrolling
- No duplicated inputs

---

### Inline Carousel

**When to use:**
- Displaying multiple similar items (e.g., restaurants, events)
- Each with visual and key metadata

**Layout:**
- Image (always include one)
- Title
- Metadata (max two lines)
- Badge (optional)
- Single clear CTA

**Rules of thumb:**
- 3–8 items per carousel
- Max three lines of metadata
- Consistent visual hierarchy

---

### Fullscreen

**When to use:**
- Rich tasks needing more space (maps, diagrams, listings)
- Multi-step workflows

**Layout:**
- System close control
- Fullscreen content area
- Persistent composer overlay

**Rules of thumb:**
- Support natural conversation through composer
- Don’t replicate full native apps
- Use fullscreen for deeper engagement only

---

### Picture-in-Picture (PiP)

**When to use:**
- Ongoing or live sessions (games, videos)
- Activities that react to chat input

**Interaction patterns:**
- **Activated:** Stays fixed when scrolling  
- **Pinned:** Remains until dismissed  
- **Session ends:** Returns inline and scrolls away  

**Rules of thumb:**
- Update dynamically with conversation
- Close automatically at session end
- Avoid clutter and static content

---

## Visual Design Guidelines

A consistent look and feel ensures partner-built tools feel native to ChatGPT while maintaining trust and clarity.

### Why This Matters

Visual consistency preserves user trust and system clarity while allowing subtle brand differentiation.

---

### Color

**Rules of thumb:**
- Use system colors for text, icons, and dividers.
- Brand accents (logos, icons) may be added — not background or text colors.
- Avoid gradients or custom patterns.
- Apply brand accent colors only to primary buttons.

---

### Typography

ChatGPT uses system fonts (SF Pro on iOS, Roboto on Android).

**Rules of thumb:**
- Always inherit the system font stack.
- Use bold/italic only in content areas, not UI.
- Limit font size variation.
- Don’t use custom fonts, even in fullscreen.

---

### Spacing & Layout

**Rules of thumb:**
- Follow system grid spacing.
- Keep consistent padding and margins.
- Respect system corner rounding.
- Maintain visual hierarchy (headline → supporting text → CTA).

---

### Icons & Imagery

**Rules of thumb:**
- Use system or monochromatic outlined icons.
- Don’t include your logo in responses (ChatGPT adds it automatically).
- Follow aspect ratios to prevent distortion.

---

## Accessibility

Accessibility is **required** for all partner experiences.

**Rules of thumb:**
- Maintain WCAG AA contrast ratios.
- Provide alt text for all images.
- Support text resizing without layout issues.

---

## Tone & Proactivity

Tone defines how partner tools “speak” within ChatGPT.  
Partners must align with ChatGPT’s clear, conversational, and trustworthy voice.

### Tone Ownership

- ChatGPT defines the overall voice.  
- Partners provide content **within** that framework.  
- Result: seamless, natural experiences.

---

### Content Guidelines

- Keep content concise and scannable.  
- Always context-driven — respond to what the user asked.  
- Avoid spam, jargon, or promotions.  
- Prioritize helpfulness and clarity.

---

### Proactivity Rules

**Allowed:** Contextual nudges (e.g., “Your ride is arriving.”)  
**Not allowed:** Promotions or re-engagements (e.g., “Check out our latest deals.”)

**Transparency:**  
Always show why and when your tool resurfaces.  
Proactivity should feel like a continuation, not an interruption.

---

### Why This Matters

Consistent tone and thoughtful re-engagement ensure:
- User trust  
- Clear value  
- A seamless conversational experience  

---

© OpenAI — Apps SDK Design Guidelines
